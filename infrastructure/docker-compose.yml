services:
  # Database
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: dental_backend
      POSTGRES_USER: dental_user
      POSTGRES_PASSWORD: dental_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dental_user -d dental_backend"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # API Service
  api:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.api
      target: production
    environment:
      # Environment
      ENVIRONMENT: development
      DEBUG: "true"

      # Database
      DATABASE_URL: postgresql://dental_user:dental_password@postgres:5432/dental_backend
      DATABASE_POOL_SIZE: "10"
      DATABASE_MAX_OVERFLOW: "20"
      DATABASE_ECHO: "false"

      # Redis
      REDIS_URL: redis://redis:6379/0
      REDIS_MAX_CONNECTIONS: "10"

      # S3/MinIO
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_NAME: dental-scans
      S3_REGION_NAME: us-east-1
      S3_USE_SSL: "false"

      # Security
      SECURITY_SECRET_KEY: your-secret-key-here-change-in-production
      SECURITY_ALGORITHM: HS256
      SECURITY_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      SECURITY_REFRESH_TOKEN_EXPIRE_DAYS: "7"

      # Logging
      LOG_LEVEL: INFO
      LOG_FORMAT: json

      # API
      API_HOST: 0.0.0.0
      API_PORT: "8000"
      API_WORKERS: "1"
      API_RELOAD: "true"
      API_CORS_ORIGINS: '["*"]'

      # Worker
      WORKER_BROKER_URL: redis://redis:6379/0
      WORKER_RESULT_BACKEND: redis://redis:6379/0
      WORKER_TASK_SERIALIZER: json
      WORKER_RESULT_SERIALIZER: json
      WORKER_ACCEPT_CONTENT: '["json"]'
      WORKER_TIMEZONE: UTC
      WORKER_ENABLE_UTC: "true"
      WORKER_TASK_TRACK_STARTED: "true"
      WORKER_TASK_TIME_LIMIT: "1800"
      WORKER_TASK_SOFT_TIME_LIMIT: "1500"

      # File Processing
      MAX_FILE_SIZE_MB: "100"
      ALLOWED_FILE_TYPES: '["stl", "ply", "obj", "gltf", "glb"]'
      TEMP_DIR: /tmp/dental-backend

      # HIPAA/GDPR
      DATA_RETENTION_DAYS: "2555"
      AUDIT_LOG_ENABLED: "true"
      ENCRYPTION_ENABLED: "true"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../services/api:/app/services/api
      - ../packages/common:/app/packages/common
      - api_logs:/app/logs
    restart: unless-stopped

  # Worker Service
  worker:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.worker
      target: production
    environment:
      # Environment
      ENVIRONMENT: development
      DEBUG: "true"

      # Database
      DATABASE_URL: postgresql://dental_user:dental_password@postgres:5432/dental_backend
      DATABASE_POOL_SIZE: "10"
      DATABASE_MAX_OVERFLOW: "20"
      DATABASE_ECHO: "false"

      # Redis
      REDIS_URL: redis://redis:6379/0
      REDIS_MAX_CONNECTIONS: "10"

      # S3/MinIO
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET_NAME: dental-scans
      S3_REGION_NAME: us-east-1
      S3_USE_SSL: "false"

      # Security
      SECURITY_SECRET_KEY: your-secret-key-here-change-in-production
      SECURITY_ALGORITHM: HS256
      SECURITY_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      SECURITY_REFRESH_TOKEN_EXPIRE_DAYS: "7"

      # Logging
      LOG_LEVEL: INFO
      LOG_FORMAT: json

      # API
      API_HOST: 0.0.0.0
      API_PORT: "8000"
      API_WORKERS: "1"
      API_RELOAD: "true"
      API_CORS_ORIGINS: '["*"]'

      # Worker
      WORKER_BROKER_URL: redis://redis:6379/0
      WORKER_RESULT_BACKEND: redis://redis:6379/0
      WORKER_TASK_SERIALIZER: json
      WORKER_RESULT_SERIALIZER: json
      WORKER_ACCEPT_CONTENT: '["json"]'
      WORKER_TIMEZONE: UTC
      WORKER_ENABLE_UTC: "true"
      WORKER_TASK_TRACK_STARTED: "true"
      WORKER_TASK_TIME_LIMIT: "1800"
      WORKER_TASK_SOFT_TIME_LIMIT: "1500"

      # File Processing
      MAX_FILE_SIZE_MB: "100"
      ALLOWED_FILE_TYPES: '["stl", "ply", "obj", "gltf", "glb"]'
      TEMP_DIR: /tmp/dental-backend

      # HIPAA/GDPR
      DATA_RETENTION_DAYS: "2555"
      AUDIT_LOG_ENABLED: "true"
      ENCRYPTION_ENABLED: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ../services/worker:/app/services/worker
      - ../packages/common:/app/packages/common
      - worker_logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
  api_logs:
  worker_logs:
